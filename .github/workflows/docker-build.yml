name: Docker Build & Push

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      dockerfile:
        required: false
        type: string
        default: Dockerfile
      registry:
        required: true
        type: string
      build_args:
        required: false
        type: string
        default: ""
    secrets:
      PAT_TOKEN:
        required: true
    outputs:
      version:
        description: "Semver version for image tag"
        value: ${{ jobs.build.outputs.version }}

jobs:
  setup:
    runs-on: [self-hosted, linux, x64]
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: corepack enable
      - id: version
        run: |
          LATEST_VERSION=$(git tag --sort=-version:refname | head -n1 || echo "0.1.0")
          IFS='.' read -r MAJOR MINOR PATCH <<< "$LATEST_VERSION"
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ "$COMMIT_MSG" == *"[major]"* ]]; then
            MAJOR=$((MAJOR+1)); MINOR=0; PATCH=0
          elif [[ "$COMMIT_MSG" == *"[minor]"* ]]; then
            MINOR=$((MINOR+1)); PATCH=0
          else
            PATCH=$((PATCH+1))
          fi
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

  build:
    runs-on: [self-hosted, linux, x64]
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - run: corepack enable
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          config-inline: |
            [registry."192.168.68.54:31834"]
              http = true
              insecure = true
            [registry."docker.io"]
              mirrors = ["mirror.gcr.io"]
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          build-args: ${{ inputs.build_args }}
          tags: |
            ${{ inputs.registry }}/${{ inputs.app_name }}:${{ needs.setup.outputs.version }}
            ${{ inputs.registry }}/${{ inputs.app_name }}:latest
          push: true
          secrets: |
            PAT_TOKEN=${{ secrets.PAT_TOKEN }}
    outputs:
      version: ${{ needs.setup.outputs.version }}