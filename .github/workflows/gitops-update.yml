name: GitOps Update

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      registry:
        required: true
        type: string
      version:
        required: true
        type: string
    secrets:
      PAT_TOKEN:
        required: true

jobs:
  update-staging:
    runs-on: [self-hosted, linux, x64]
    if: github.ref == 'refs/heads/main'
    env:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Bump package.json versions to match tag
        run: |
          set -euo pipefail
          VERSION=${{ inputs.version }}
          # Update versions directly without relying on package managers
          for file in package.json packages/*/package.json; do
            if [ -f "$file" ]; then
              node -e "const fs=require('fs'); const f=process.argv[1]; const v=process.argv[2]; const j=JSON.parse(fs.readFileSync(f,'utf8')); j.version=v; fs.writeFileSync(f, JSON.stringify(j, null, 4)+'\\n');" "$file" "$VERSION"
              echo "Bumped $file to $VERSION"
            fi
          done
          git config user.email "argonaut-bot@users.noreply.github.com"
          git config user.name "argonaut-bot"
          git add -A
          git commit -m "chore: bump package versions to $VERSION [skip ci]" || echo "No changes to commit"
          git push origin HEAD:main

      - name: Create git tag
        run: |
          git config --global user.email "argonaut-bot@users.noreply.github.com"
          git config --global user.name "argonaut-bot"
          git tag -f "${{ inputs.version }}"
          git push --force origin "refs/tags/${{ inputs.version }}"

      - name: Update ArgoCD repo (staging)
        run: |
          git clone https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/igor-siergiej/argonaut.git argonaut-repo
          cd argonaut-repo
          git config user.email "argonaut-bot@users.noreply.github.com"
          git config user.name "argonaut-bot"
          # Replace the final tag on every image line; skip digest refs (with '@')
          sed -i -E "s|^([[:space:]]*image:[[:space:]]*[^@]+):([^:@[:space:]]+)([[:space:]]*)$|\\1:${{ inputs.version }}\\3|" apps/${{ inputs.app_name }}/overlays/staging/patch-deployment.yaml
          git add apps/${{ inputs.app_name }}/overlays/staging/patch-deployment.yaml
          git commit -m "Update ${{ inputs.app_name }} staging to version ${{ inputs.version }}"
          git push origin main

  update-production:
    runs-on: [self-hosted, linux, x64]
    needs: update-staging
    if: github.ref == 'refs/heads/main'
    environment: production
    env:
      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Update ArgoCD repo (production)
        run: |
          git clone https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/igor-siergiej/argonaut.git argonaut-repo
          cd argonaut-repo
          git config user.email "argonaut-bot@users.noreply.github.com"
          git config user.name "argonaut-bot"
          # Replace the final tag on every image line; skip digest refs (with '@')
          sed -i -E "s|^([[:space:]]*image:[[:space:]]*[^@]+):([^:@[:space:]]+)([[:space:]]*)$|\\1:${{ inputs.version }}\\3|" apps/${{ inputs.app_name }}/overlays/production/patch-deployment.yaml
          git add apps/${{ inputs.app_name }}/overlays/production/patch-deployment.yaml
          git commit -m "Update ${{ inputs.app_name }} production to version ${{ inputs.version }}"
          git push origin main
